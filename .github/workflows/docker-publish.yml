name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

env:
  DOCKER_HUB_USERNAME: nguyenhuyphc@gmail.com
  # VPS_HOST: ${{ secrets.VPS_HOST }}
  # VPS_USERNAME: ${{ secrets.VPS_USERNAME }}
  # VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: nguyenhuyphc@gmail.com
          password: Phuc0847911068

      # Build and push AI.API
      - name: Build and push AI.API
        uses: docker/build-push-action@v4
        with:
          context: .
          file: AI.API/Dockerfile
          push: true
          tags: magicflexing/docai-ai-api:latest

      # Build and push Auth.API
      - name: Build and push Auth.API
        uses: magicflexing/build-push-action@v4
        with:
          context: .
          file: Auth.API/Dockerfile
          push: true
          tags: magicflexing/docai-auth-api:latest

      # Build and push Document.API
      - name: Build and push Document.API
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Document.API/Dockerfile
          push: true
          tags: magicflexing/docai-document-api:latest

      # Build and push Notification.API
      - name: Build and push Notification.API
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Notification.API/Dockerfile
          push: true
          tags: magicflexing/docai-notification-api:latest

      # Build and push API Gateway
      - name: Build and push API Gateway
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ApiGateway/Dockerfile
          push: true
          tags: magicflexing/docai-gateway:latest

  # deploy:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Copy docker-compose to VPS
  #       uses: appleboy/scp-action@master
  #       with:
  #         host: ${{ secrets.VPS_HOST }}
  #         username: ${{ secrets.VPS_USERNAME }}
  #         key: ${{ secrets.VPS_SSH_KEY }}
  #         source: "compose.yaml"
  #         target: "~/docai"

  #     - name: Deploy to VPS
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.VPS_HOST }}
  #         username: ${{ secrets.VPS_USERNAME }}
  #         key: ${{ secrets.VPS_SSH_KEY }}
  #         script: |
  #           cd ~/docai
  #           echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
  #           docker-compose pull
  #           docker-compose up -d
  #           docker system prune -f
